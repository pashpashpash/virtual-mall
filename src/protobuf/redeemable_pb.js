// source: protobuf/redeemable.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.protobuf.RedeemableContract', null, global);
goog.exportSymbol('proto.protobuf.RedeemableInfo', null, global);
goog.exportSymbol('proto.protobuf.RedeemableTheme', null, global);
goog.exportSymbol('proto.protobuf.Redeemables', null, global);
goog.exportSymbol('proto.protobuf.RenderRequest', null, global);
goog.exportSymbol('proto.protobuf.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.RedeemableInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.RedeemableInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.RedeemableInfo.displayName = 'proto.protobuf.RedeemableInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.RenderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.RenderRequest.repeatedFields_, null);
};
goog.inherits(proto.protobuf.RenderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.RenderRequest.displayName = 'proto.protobuf.RenderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Redeemables = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.Redeemables.repeatedFields_, null);
};
goog.inherits(proto.protobuf.Redeemables, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.Redeemables.displayName = 'proto.protobuf.Redeemables';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.RedeemableInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.RedeemableInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.RedeemableInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.RedeemableInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretAccount: jspb.Message.getFieldWithDefault(msg, 1, ""),
    creatorAccount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    claimerAccount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    encryptedSecretPrivateKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    creatorMessage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    theme: jspb.Message.getFieldWithDefault(msg, 6, 0),
    txDeposited: jspb.Message.getFieldWithDefault(msg, 7, ""),
    txClaimed: jspb.Message.getFieldWithDefault(msg, 8, ""),
    deprecatedNFTTokenID: jspb.Message.getFieldWithDefault(msg, 9, 0),
    nFTContract: jspb.Message.getFieldWithDefault(msg, 10, ""),
    nFTChainID: jspb.Message.getFieldWithDefault(msg, 11, 0),
    nFTImage: jspb.Message.getFieldWithDefault(msg, 12, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 13, 0),
    claimedAt: jspb.Message.getFieldWithDefault(msg, 14, 0),
    nFTTokenID: jspb.Message.getFieldWithDefault(msg, 15, ""),
    nFTName: jspb.Message.getFieldWithDefault(msg, 16, ""),
    creatorFromName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    status: jspb.Message.getFieldWithDefault(msg, 18, 0),
    redeemableContract: jspb.Message.getFieldWithDefault(msg, 19, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 20, ""),
    decimals: jspb.Message.getFieldWithDefault(msg, 21, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.RedeemableInfo}
 */
proto.protobuf.RedeemableInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.RedeemableInfo;
  return proto.protobuf.RedeemableInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.RedeemableInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.RedeemableInfo}
 */
proto.protobuf.RedeemableInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClaimerAccount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptedSecretPrivateKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorMessage(value);
      break;
    case 6:
      var value = /** @type {!proto.protobuf.RedeemableTheme} */ (reader.readEnum());
      msg.setTheme(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxDeposited(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxClaimed(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeprecatedNFTTokenID(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNFTContract(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNFTChainID(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNFTImage(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClaimedAt(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setNFTTokenID(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setNFTName(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorFromName(value);
      break;
    case 18:
      var value = /** @type {!proto.protobuf.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 19:
      var value = /** @type {!proto.protobuf.RedeemableContract} */ (reader.readEnum());
      msg.setRedeemableContract(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDecimals(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.RedeemableInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.RedeemableInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.RedeemableInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.RedeemableInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatorAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClaimerAccount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEncryptedSecretPrivateKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatorMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTheme();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTxDeposited();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTxClaimed();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDeprecatedNFTTokenID();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getNFTContract();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getNFTChainID();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getNFTImage();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getClaimedAt();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getNFTTokenID();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getNFTName();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCreatorFromName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = message.getRedeemableContract();
  if (f !== 0.0) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string secret_account = 1;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getSecretAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setSecretAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string creator_account = 2;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getCreatorAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setCreatorAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string claimer_account = 3;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getClaimerAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setClaimerAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string encrypted_secret_private_key = 4;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getEncryptedSecretPrivateKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setEncryptedSecretPrivateKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string creator_message = 5;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getCreatorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setCreatorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional RedeemableTheme theme = 6;
 * @return {!proto.protobuf.RedeemableTheme}
 */
proto.protobuf.RedeemableInfo.prototype.getTheme = function() {
  return /** @type {!proto.protobuf.RedeemableTheme} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.protobuf.RedeemableTheme} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setTheme = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string tx_deposited = 7;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getTxDeposited = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setTxDeposited = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string tx_claimed = 8;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getTxClaimed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setTxClaimed = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 deprecated_n_f_t_token_i_d = 9;
 * @return {number}
 */
proto.protobuf.RedeemableInfo.prototype.getDeprecatedNFTTokenID = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setDeprecatedNFTTokenID = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string n_f_t_contract = 10;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getNFTContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setNFTContract = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int64 n_f_t_chain_i_d = 11;
 * @return {number}
 */
proto.protobuf.RedeemableInfo.prototype.getNFTChainID = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setNFTChainID = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string n_f_t_image = 12;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getNFTImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setNFTImage = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int64 created_at = 13;
 * @return {number}
 */
proto.protobuf.RedeemableInfo.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 claimed_at = 14;
 * @return {number}
 */
proto.protobuf.RedeemableInfo.prototype.getClaimedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setClaimedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string n_f_t_token_i_d = 15;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getNFTTokenID = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setNFTTokenID = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string n_f_t_name = 16;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getNFTName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setNFTName = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string creator_from_name = 17;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getCreatorFromName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setCreatorFromName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional Status status = 18;
 * @return {!proto.protobuf.Status}
 */
proto.protobuf.RedeemableInfo.prototype.getStatus = function() {
  return /** @type {!proto.protobuf.Status} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {!proto.protobuf.Status} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 18, value);
};


/**
 * optional RedeemableContract redeemable_contract = 19;
 * @return {!proto.protobuf.RedeemableContract}
 */
proto.protobuf.RedeemableInfo.prototype.getRedeemableContract = function() {
  return /** @type {!proto.protobuf.RedeemableContract} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.protobuf.RedeemableContract} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setRedeemableContract = function(value) {
  return jspb.Message.setProto3EnumField(this, 19, value);
};


/**
 * optional string amount = 20;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 decimals = 21;
 * @return {number}
 */
proto.protobuf.RedeemableInfo.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional string symbol = 22;
 * @return {string}
 */
proto.protobuf.RedeemableInfo.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.RedeemableInfo} returns this
 */
proto.protobuf.RedeemableInfo.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.RenderRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.RenderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.RenderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.RenderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.RenderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    redeemableSecretList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.RenderRequest}
 */
proto.protobuf.RenderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.RenderRequest;
  return proto.protobuf.RenderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.RenderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.RenderRequest}
 */
proto.protobuf.RenderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRedeemableSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.RenderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.RenderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.RenderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.RenderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRedeemableSecretList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string redeemable_secret = 1;
 * @return {!Array<string>}
 */
proto.protobuf.RenderRequest.prototype.getRedeemableSecretList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf.RenderRequest} returns this
 */
proto.protobuf.RenderRequest.prototype.setRedeemableSecretList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.RenderRequest} returns this
 */
proto.protobuf.RenderRequest.prototype.addRedeemableSecret = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.RenderRequest} returns this
 */
proto.protobuf.RenderRequest.prototype.clearRedeemableSecretList = function() {
  return this.setRedeemableSecretList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.Redeemables.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Redeemables.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Redeemables.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Redeemables} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Redeemables.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.protobuf.RedeemableInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Redeemables}
 */
proto.protobuf.Redeemables.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Redeemables;
  return proto.protobuf.Redeemables.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Redeemables} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Redeemables}
 */
proto.protobuf.Redeemables.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.RedeemableInfo;
      reader.readMessage(value,proto.protobuf.RedeemableInfo.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Redeemables.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Redeemables.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Redeemables} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Redeemables.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.RedeemableInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RedeemableInfo items = 1;
 * @return {!Array<!proto.protobuf.RedeemableInfo>}
 */
proto.protobuf.Redeemables.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.protobuf.RedeemableInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.RedeemableInfo, 1));
};


/**
 * @param {!Array<!proto.protobuf.RedeemableInfo>} value
 * @return {!proto.protobuf.Redeemables} returns this
*/
proto.protobuf.Redeemables.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.RedeemableInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.RedeemableInfo}
 */
proto.protobuf.Redeemables.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.RedeemableInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Redeemables} returns this
 */
proto.protobuf.Redeemables.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * @enum {number}
 */
proto.protobuf.RedeemableTheme = {
  VIBRANT: 0,
  DARK: 1
};

/**
 * @enum {number}
 */
proto.protobuf.Status = {
  DIGITAL: 0,
  PENDING: 1,
  PRINTING: 2,
  PRINTED: 3
};

/**
 * @enum {number}
 */
proto.protobuf.RedeemableContract = {
  ERC721: 0,
  ERC1155: 1,
  NATIVE: 2,
  ERC20: 3
};

goog.object.extend(exports, proto.protobuf);
